<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter [
<!ENTITY % manualent SYSTEM "manual.ent">
%manualent;
]>
<chapter xml:id="ch-openbsd-installation"
         xmlns="http://docbook.org/ns/docbook"
         version="5.0"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:lang="en">
  <title>OpenBSD Installation</title>

  <section xml:id="sec-pxe-server">
    <title>PXE server setup</title>

    <para>Installing OpenBSD on the ALIX.2D3 is a little more involved than
    installing on standard PC hardware, due to the lack of a video card or
    the ability to boot from CD-ROM (even from USB CD-ROM devices).
    Instead we will have to use the ALIX board's PXE boot capability to
    boot into the installer, by running a PXE boot server on the PC
    mentioned in <xref linkend="sec-prerequisites" />.</para>

    <para>Thankfully, the Ubuntu desktop live CD is flexible enough to
    serve as a platform for the temporary boot server, without requiring
    any permanent changes to your PC.</para>

    <section xml:id="sec-pxe-ubuntu-packages">
      <title>Ubuntu packages</title>

      <para>Boot the Ubuntu live CD and quit the installer.  Ensure that
      Ubuntu has a working Internet connection, then enable the "universe"
      package repository by uncommenting the corresponding lines in
      <filename>/etc/apt/sources.list</filename>.  Now open a terminal and
      run the following commands to install prerequisite packages:</para>

<screen width="80">
$ sudo -s
# apt-get update
# apt-get install dhcp3-server tftpd xinetd cu</screen>
    </section>

    <section xml:id="sec-pxe-network-config">
      <title>Network configuration &amp; NAT</title>

      <para>Run this command to configure a static address on the PC's
      Ethernet interface:</para>

<screen width="80">
# ifconfig eth0 up 192.168.2.1 netmask 255.255.255.0</screen>

      <para>I've found you may also need to configure the static address on
      your Ethernet adapter in the "Network Connections" dialog (under
      Preferences in the System menu) to prevent Network Manager from
      getting in the way.  Yes, this is a little hackish, but we only need
      it to work for the duration of the install...</para>

      <para>Now enable routing and configure a simple NAT using
      <command>iptables</command> so that the ALIX board can access the
      Internet through your PC's wireless connection:</para>

<screen width="80">
# echo 1 > /proc/sys/net/ipv4/ip_forward
# iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
# iptables -A FORWARD -i eth0 -j ACCEPT
# iptables -A FORWARD -i wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT</screen>
    </section>

    <section xml:id="sec-pxe-dhcp-server">
      <title>DHCP server</title>

      <para>Replace <filename>/etc/dhcp3/dhcpd.conf</filename> with the following:
      </para>

<programlisting>
authoritative;

shared-network LOCAL-NET {
  option domain-name-servers 8.8.8.8;

  subnet 192.168.2.0 netmask 255.255.255.0 {
    option routers 192.168.2.1;
    filename "pxeboot";
    range 192.168.2.100 192.168.2.200;
    default-lease-time 600;
    max-lease-time 7200;
  }
}
</programlisting>

      <para>Also, edit the file
      <filename>/etc/default/dhcp3-server</filename> so that its last line
      reads:</para>

<programlisting>
INTERFACES="eth0"
</programlisting>

      <para>Now you can start the DHCP server.</para>

<screen width="80">
# /etc/init.d/dhcp3-server start</screen>
    </section>

    <section xml:id="sec-pxe-tftp-server">
      <title>TFTP server</title>

      <para>Create an xinetd file at
      <filename>/etc/xinetd.d/tftp</filename> with:</para>

<programlisting>
service tftp
{
  socket_type = dgram
  protocol = udp
  wait = yes
  user = root
  server = /usr/sbin/in.tftpd
  server_args = -s /tftpboot
}
</programlisting>

      <para>Next create the aforementioned directory
      <filename>/tftpboot</filename>.  Download the files
      <filename>bsd.rd</filename> and <filename>pxeboot</filename> from the
      <filename>/&obsdVer;/i386/</filename> directory on your favorite OpenBSD
      mirror and copy them here.  Then, restart xinetd to load the new
      configuration:</para>

<screen width="80">
# /etc/init.d/xinetd restart</screen>
    </section>

    <section xml:id="sec-pxe-serial-console">
      <title>Serial console</title>

      <para>Connect your laptop's serial port (or plugged-in USB-serial
      adapter) to the ALIX board's serial port with your null modem cable,
      then use the <command>cu</command> command to open the serial
      console.  For example, if you're using a USB adapter:</para>

<screen width="80">
# cu -e -o -s 115200 -l /dev/ttyUSB0</screen>
    </section>
  </section>

  <section xml:id="sec-pxe-booting">
    <title>PXE booting</title>

    <para>With your serial console ready, plug in the ALIX board's power
    adapter, and you should see the board begin to boot.  Enter the
    following at the OpenBSD boot menu:</para>

<screen width="80">
boot> stty com0 115200
boot> set tty com0
boot> bsd.rd</screen>
  </section>

  <section xml:id="sec-openbsd-installer">
    <title>The OpenBSD installer</title>

    <section xml:id="sec-openbsd-installer-basic">
      <title>Basic setup</title>

      <para>When the OpenBSD ramdisk boots, you will be prompted with the
      choices: <prompt>(I)nstall, (U)pgrade, or (S)hell?</prompt> â€“ press the
      <keycap>I</keycap> key to begin the installer.  Therein you will be
      asked a few preliminary questions.</para>

      <procedure>
        <step>
          <para>Enter the desired hostname.</para>
        </step>
        <step>
          <para>Configure IPv4 on the vr0 interface, but skip IPv6
          configuration for now.</para>
        </step>
        <step>
          <para>Choose and enter a root password.</para>
        </step>
        <step>
          <para>Opt to start <command>sshd(8)</command> and
          <command>ntpd(8)</command> by default.</para>
        </step>
        <step>
          <para>Specify that you do not expect to run the X Window System.
          This will cause the machdep.allowaperature sysctl to be disabled,
          possibly improving your system's security.</para>
        </step>
        <step>
          <para>Set the default console to com0.</para>
        </step>
        <step>
          <para>Skip setting up a regular user account for now.</para>
        </step>
        <step>
          <para>Enter your timezone.</para>
        </step>
      </procedure>
    </section>

    <section xml:id="sec-openbsd-partitioning">
      <title>Partitioning</title>

      <para>Next you will need to set up your disk partitions and slices.
      In <command>fdisk(8)</command>, specify that you want to use the
      whole disk for OpenBSD.  Then you will be brought to the BSD disk
      label editor.</para>

      <para>Press <keycap>P</keycap> to view the disk's current BSD slices;
      you shouldn't see anything here except the "c" slice, which
      represents the entire disk.  Use the <keycap>A</keycap> command to
      create the disk slice set shown in <xref
      linkend="tab-openbsd-slices"/>.</para>

      <table xml:id="tab-openbsd-slices" frame="all">
        <title>OpenBSD disk slices</title>
        <tgroup cols="5" align="left" colsep="1" rowsep="1">
          <thead>
            <row>
              <entry>Label</entry>
              <entry>FS Type</entry>
              <entry>Mount Point</entry>
              <entry>Blocks</entry>
              <entry>Bytes</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>wd0a</entry>
              <entry>4.2BSD</entry>
              <entry>/</entry>
              <entry>1,048,576</entry>
              <entry>512 MB</entry>
            </row>
            <row>
              <entry>wd0d</entry>
              <entry>4.2BSD</entry>
              <entry>/tmp</entry>
              <entry>1,048,576</entry>
              <entry>512 MB</entry>
            </row>
            <row>
              <entry>wd0e</entry>
              <entry>4.2BSD</entry>
              <entry>/var</entry>
              <entry>6,291,456</entry>
              <entry>3 GB</entry>
            </row>
            <row>
              <entry>wd0f</entry>
              <entry>4.2BSD</entry>
              <entry>/usr</entry>
              <entry>20,971,520</entry>
              <entry>10 GB</entry>
            </row>
            <row>
              <entry>wd0g</entry>
              <entry>4.2BSD</entry>
              <entry>/home</entry>
              <entry>2,159,338</entry>
              <entry>1.03 GB</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>When that is done, press <keycap>Q</keycap> to quit the label
      editor, then press <keycap>Y</keycap> to confirm that you wish to
      write the new disk label.  Confirm your way past any relevant warning
      messages, and the CF card will be partitioned and formatted for
      OpenBSD's installation.</para>
    </section>

    <section xml:id="sec-openbsd-sets">
      <title>Installation sets</title>

      <para>Next you will be asked where to find the OpenBSD installation
      sets: choose the default mechanism, http, and use the default OpenBSD
      mirror (or any other mirror of your choice).  Make any desired
      changes to the default set selection and then proceed to the next
      stage of the installer.<footnote><para>I have heard it said that it
      is a good idea to install all of the OpenBSD sets if one wants to
      build packages from the ports tree, even if one does not intend to
      run X11.  However, I have not found this to be necessary in my own
      experience.</para></footnote></para>

      <para>Once the sets have been installed, you can shut down your
      Ubuntu PXE boot server and reboot the ALIX board into its new OpenBSD
      installation.  You may also wish to disable PXE booting in the ALIX's
      BIOS while you are not using it.</para>
    </section>
  </section>
</chapter>
